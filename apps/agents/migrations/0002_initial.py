# Generated by Django 4.2 on 2023-07-13 16:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('commons', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('system', '0001_initial'),
        ('agents', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='requester',
            name='user',
            field=models.ForeignKey(blank=True, help_text='This value becomes null when the requester is anonymous user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requests', related_query_name='request', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='request',
            name='agent_branch',
            field=models.ForeignKey(help_text='The agent branch that the request is sent to', on_delete=django.db.models.deletion.CASCADE, related_name='agent_requests', related_query_name='agent_request', to='agents.agentbranch'),
        ),
        migrations.AddField(
            model_name='request',
            name='requester',
            field=models.ForeignKey(help_text='The user that the request is sent by', on_delete=django.db.models.deletion.CASCADE, related_name='user_requests', related_query_name='user_request', to='agents.requester'),
        ),
        migrations.AddField(
            model_name='agentservicesubscription',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_subscriptions', related_query_name='service_subscription', to='agents.agent'),
        ),
        migrations.AddField(
            model_name='agentservicesubscription',
            name='subscription_currency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.currency'),
        ),
        migrations.AddField(
            model_name='agentreferraltracker',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_trackers', related_query_name='referral_tracker', to='agents.agent'),
        ),
        migrations.AddField(
            model_name='agentreferraltracker',
            name='referral_reward_plan',
            field=models.ForeignKey(help_text='The reward plan that this tracker is based on', on_delete=django.db.models.deletion.CASCADE, related_name='agent_referral_trackers', related_query_name='agent_referral_tracker', to='system.referralrewardplan'),
        ),
        migrations.AddField(
            model_name='agentreferralreward',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_rewards', related_query_name='referral_reward', to='agents.agent'),
        ),
        migrations.AddField(
            model_name='agentreferralreward',
            name='coupon',
            field=models.ForeignKey(help_text='The coupon that is rewarded to the agent', on_delete=django.db.models.deletion.CASCADE, to='system.coupon'),
        ),
        migrations.AddField(
            model_name='agentreferralreward',
            name='referral_tracker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', related_query_name='reward', to='agents.agentreferraltracker'),
        ),
        migrations.AddField(
            model_name='agentreferral',
            name='referee_agent',
            field=models.ForeignKey(help_text='An agent referred by another agent', on_delete=django.db.models.deletion.CASCADE, to='agents.agent'),
        ),
        migrations.AddField(
            model_name='agentreferral',
            name='referral_tracker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_referrals', related_query_name='agent_referral', to='agents.agentreferraltracker'),
        ),
        migrations.AddField(
            model_name='agentreferral',
            name='referrer_agent',
            field=models.ForeignKey(help_text='An agent who referred another agent', on_delete=django.db.models.deletion.CASCADE, related_name='referrals', related_query_name='referral', to='agents.agent'),
        ),
        migrations.AddField(
            model_name='agentdiscounttracker',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discounts', related_query_name='discount', to='agents.agent'),
        ),
        migrations.AddField(
            model_name='agentdiscounttracker',
            name='discount',
            field=models.ForeignKey(help_text='parent discount configuration that this discount is based from', on_delete=django.db.models.deletion.CASCADE, related_name='agent_discounts', related_query_name='agent_discount', to='system.discount'),
        ),
        migrations.AddField(
            model_name='agentbranch',
            name='address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_branches', related_query_name='agent_branch', to='commons.address', verbose_name='agent branch address'),
        ),
        migrations.AddField(
            model_name='agentbranch',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', related_query_name='branch', to='agents.agent', verbose_name='parent agent'),
        ),
        migrations.AddField(
            model_name='agentadmin',
            name='agent_branch',
            field=models.ForeignKey(help_text='The agent branch that this user works in', on_delete=django.db.models.deletion.CASCADE, related_name='branch_admins', related_query_name='branch_admin', to='agents.agentbranch'),
        ),
        migrations.AddField(
            model_name='agentadmin',
            name='user',
            field=models.OneToOneField(error_messages={'user_not_unique': 'A user can create only one agent or                                              must be assigned to a single agent as admin'}, help_text='The user that works as admin in the agent branch', on_delete=django.db.models.deletion.CASCADE, related_name='agent_branch', to=settings.AUTH_USER_MODEL, verbose_name='user admin'),
        ),
        migrations.AddField(
            model_name='agent',
            name='referred_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agents.agent', verbose_name='referrer'),
        ),
        migrations.AddField(
            model_name='agent',
            name='user_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', related_query_name='agent', to='auth.group', verbose_name='category of user group'),
        ),
        migrations.AddConstraint(
            model_name='agentbranch',
            constraint=models.UniqueConstraint(fields=('agent', 'name'), name='unique_branch_name_per_agent_branch'),
        ),
        migrations.AddConstraint(
            model_name='agentbranch',
            constraint=models.UniqueConstraint(condition=models.Q(('is_main_branch', True)), fields=('agent',), name='only_single_mainbranch_per_agent'),
        ),
    ]
