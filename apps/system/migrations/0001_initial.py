# Generated by Django 4.2 on 2023-07-13 16:58

import apps.system.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='coupon code')),
                ('discount_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_use', models.PositiveIntegerField(default=1, help_text='How many times can be redeemed', verbose_name='total uses')),
                ('use_count', models.PositiveIntegerField(default=0, help_text='How many times redeemed so far', verbose_name='use counts')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='currency name')),
                ('iso_4217_alpha_code', models.CharField(default='ETB', max_length=3, unique=True, verbose_name='alphabetic code of the currency')),
                ('iso_4217_num_code', models.CharField(default='230', max_length=3, unique=True, verbose_name='numeric code of the currency')),
                ('is_default', models.BooleanField(default=False)),
                ('exchange_rate', models.DecimalField(blank=True, decimal_places=5, default=0.0, max_digits=10)),
            ],
            options={
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='discount name')),
                ('action', models.CharField(choices=[('COUNT', 'Count'), ('SINGLE', 'Single'), ('DEADLINE', 'Deadline')], help_text='determines how the system calculated length of discount period                                 or amount. It can have count, single, or deadline.', max_length=50, verbose_name='Discount Action Type')),
                ('unit', models.CharField(choices=[('DAYS', 'Days'), ('LISTINGS', 'Listings'), ('SUBSCRIPTION', 'Subscription')], help_text='It can be days, listings or subscription', max_length=50, verbose_name='discount value unit')),
                ('value', models.IntegerField(blank=True, default=1, help_text='Unit value. i.e. 5 days, or 10 listings, etc')),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('discount_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_type', models.CharField(choices=[('PAY_PER_LISTING', 'Pay-per-listing'), ('SUBSCRIPTION', 'Subscription')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_trackable', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeaturingPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('price', models.DecimalField(decimal_places=5, default=0.0, max_digits=12)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListingParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(choices=[('*', '*'), ('AGENT_REFERRAL_COUPON', 'Agent Referral Coupon')], max_length=200, unique=True, verbose_name='parameter name')),
                ('value', models.CharField(blank=True, default='', help_text='It is any value associated with the listing parameter.                                         The value could be integer, string or boolean.                                         Value type cast will be done when actually using the value', max_length=100, verbose_name='parameter value')),
                ('will_expire_after_days', models.PositiveIntegerField(default=1, verbose_name='How many days will conf stay valid')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, verbose_name='topic name')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='payment method name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethodDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('discount_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferralRewardPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='reward plan name')),
                ('referrer_reward_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('referrer_reward_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('referee_reward_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('referee_reward_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('number_of_referrals_needed', models.PositiveIntegerField(blank=True, default=1, help_text='Number of referral actions needed to get the reward.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceSubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, verbose_name='service subscription plan name')),
                ('base_price', models.DecimalField(decimal_places=5, max_digits=12, verbose_name='base subscription plan')),
                ('period_unit', models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'), ('YEAR', 'Year')], max_length=20, verbose_name='unit of period')),
                ('period_length', models.PositiveIntegerField(default=1, verbose_name='length of period')),
                ('billing_cycle', models.CharField(choices=[('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'), ('YEAR', 'Year')], max_length=20, verbose_name='unit of billing period')),
                ('billing_cycle_length', models.PositiveIntegerField(default=1, verbose_name='length of billing period')),
                ('base_number_of_branchs', models.PositiveIntegerField(default=1, help_text='Maximum number of branchs with the base price.                                                                     If more than this number, then addtional fees apply.', verbose_name='Base number of branchs')),
                ('price_increase_by_branch_percentage', models.DecimalField(decimal_places=2, default=0.0, help_text='The percentage of the base price                                                                 that the subscription plan price is increased                                                                   as the number of branches encrease', max_digits=12)),
                ('price_increase_by_branch_fixed', models.DecimalField(decimal_places=2, default=0.0, help_text='The fixed rate that the subscription plan                                                          price is increased as the number of branches encrease', max_digits=12)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportedCardScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(help_text='Card scheme name, such as Visa, Mastercard, etc', max_length=50, verbose_name='card scheme name')),
                ('BIN', models.CharField(help_text='BIN is bank identification number that uniquely identifies the bank', max_length=19, verbose_name='card BIN')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(choices=[('*', '*'), ('MYPROPERTY', 'Property renting/selling system')], max_length=100, unique=True, verbose_name='system module name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100, verbose_name='system asset name')),
                ('asset_path', models.FileField(upload_to=apps.system.models.get_system_asset_path, verbose_name='asset file path')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemAssetOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(help_text='name of asset owner, page name, component name, etc', max_length=250, unique=True, verbose_name='asset owner name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('feedback', models.TextField(verbose_name='System feedback')),
            ],
        ),
        migrations.CreateModel(
            name='SystemParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='parameter name')),
                ('value', models.CharField(blank=True, default='', help_text='is any value attached to the parameter. For example,                              16 listing per page', max_length=100, verbose_name='parameter value')),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='voucher code')),
                ('initial_value', models.DecimalField(decimal_places=5, default=0.0, max_digits=12, verbose_name='initial voucher value')),
                ('current_value', models.DecimalField(decimal_places=5, default=0.0, max_digits=12, verbose_name='current voucher value')),
                ('base_currency', models.ForeignKey(help_text='The default currency for this voucher.', on_delete=django.db.models.deletion.CASCADE, related_name='vouchers', related_query_name='voucher', to='system.currency')),
                ('system', models.ForeignKey(help_text='The system module that this voucher applies to', on_delete=django.db.models.deletion.CASCADE, related_name='vouchers', related_query_name='voucher', to='system.system', verbose_name='System Module')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('rating', models.PositiveIntegerField(default=5, help_text='Rating value out of 5', validators=[django.core.validators.MaxValueValidator(5, message='Rating must not be greater than 5')], verbose_name='System rating value')),
                ('system', models.ForeignKey(help_text='The system module that this rating is given to', on_delete=django.db.models.deletion.CASCADE, related_name='system_ratings', related_query_name='system_rating', to='system.system', verbose_name='System Module')),
            ],
        ),
    ]
