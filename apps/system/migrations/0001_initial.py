# Generated by Django 4.2 on 2023-05-19 21:01

import apps.system.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='currency name')),
                ('iso_4217_alpha_code', models.CharField(max_length=3, unique=True, verbose_name='numeric code of the currency')),
                ('is_default', models.BooleanField(default=False)),
                ('exchange_rate', models.DecimalField(decimal_places=5, max_digits=10)),
            ],
            options={
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='ListingParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, verbose_name='parameter name')),
                ('value', models.CharField(blank=True, default='', help_text='It is any value associated with the listing parameter.                                         The value could be integer, string or boolean.                                         Value type cast will be done when actually using the value', max_length=100, verbose_name='parameter value')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='payment method name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100, verbose_name='system module name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='voucher code')),
                ('initial_value', models.DecimalField(decimal_places=5, default=0.0, max_digits=12, verbose_name='initial voucher value')),
                ('current_value', models.DecimalField(decimal_places=5, default=0.0, max_digits=12, verbose_name='current voucher value')),
                ('base_currency', models.ForeignKey(help_text='The default currency for this voucher.', on_delete=django.db.models.deletion.CASCADE, related_name='vouchers', related_query_name='voucher', to='system.currency')),
                ('system', models.ForeignKey(help_text='The system module that this voucher applies to', on_delete=django.db.models.deletion.CASCADE, related_name='vouchers', related_query_name='voucher', to='system.system', verbose_name='System Module')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('rating', models.PositiveIntegerField(default=5, help_text='Rating value out of 5', verbose_name='System rating value')),
                ('system', models.ForeignKey(help_text='The system module that this rating is given to', on_delete=django.db.models.deletion.CASCADE, related_name='system_ratings', related_query_name='system_rating', to='system.system', verbose_name='System Module')),
                ('user', models.ForeignKey(blank=True, default=-1, help_text='User id will be set to -1 by default if user is anonymous', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='system_ratings', related_query_name='system_rating', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='parameter name')),
                ('value', models.CharField(blank=True, default='', help_text='is any value attached to the parameter. For example,                              16 listing per page', max_length=100, verbose_name='parameter value')),
                ('system', models.ForeignKey(help_text='The system module that this parameter apply to', on_delete=django.db.models.deletion.CASCADE, related_name='system_parameters', related_query_name='system_parameter', to='system.system', verbose_name='System Module')),
            ],
        ),
        migrations.CreateModel(
            name='SystemFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('feedback', models.TextField(verbose_name='System feedback')),
                ('system', models.ForeignKey(help_text='The system module that this feedback is given to', on_delete=django.db.models.deletion.CASCADE, related_name='system_feedbacks', related_query_name='system_feedback', to='system.system', verbose_name='System Module')),
                ('user', models.ForeignKey(default=-1, help_text='User id will be set to -1 by default if user is anonymous', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='system_feedbacks', related_query_name='system_feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemAssetOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(help_text='name of asset owner, page name, component name, etc', max_length=250, unique=True, verbose_name='asset owner name')),
                ('system', models.ForeignKey(help_text='The system module that this system asset owner belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='system_asset_owners', related_query_name='system_asset_owner', to='system.system', verbose_name='System Module')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100, verbose_name='system asset name')),
                ('asset_path', models.FileField(upload_to=apps.system.models.get_system_asset_path, verbose_name='asset file path')),
                ('asset_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', related_query_name='asset', to='system.systemassetowner')),
                ('system', models.ForeignKey(help_text='The system module that this system asset belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='system_assets', related_query_name='system_asset', to='system.system', verbose_name='System Module')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportedCardScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(help_text='Card scheme name, such as Visa, Mastercard, etc', max_length=50, verbose_name='card scheme name')),
                ('BIN', models.CharField(help_text='BIN is bank identification number that uniquely identifies the bank', max_length=19, verbose_name='card BIN')),
                ('system', models.ForeignKey(help_text='The system module that this supported card scheme applies to', on_delete=django.db.models.deletion.CASCADE, related_name='supported_card_schemes', related_query_name='supported_card_scheme', to='system.system', verbose_name='System Module')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceSubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, verbose_name='service subscription plan name')),
                ('base_price', models.DecimalField(decimal_places=5, max_digits=12, verbose_name='base subscription plan')),
                ('period_unit', models.CharField(choices=[('Day', 'DAY'), ('Week', 'WEEK'), ('Month', 'MONTH'), ('Year', 'YEAR')], max_length=20, verbose_name='unit of period')),
                ('period_length', models.PositiveIntegerField(default=1, verbose_name='length of period')),
                ('billing_cycle', models.CharField(choices=[('Day', 'DAY'), ('Week', 'WEEK'), ('Month', 'MONTH'), ('Year', 'YEAR')], max_length=20, verbose_name='unit of billing period')),
                ('billing_cycle_length', models.PositiveIntegerField(default=1, verbose_name='length of billing period')),
                ('price_increase_by_branch_percentage', models.DecimalField(decimal_places=2, default=0.0, help_text='The percentage of the base price                                                                 that the subscription plan price is increased                                                                   as the number of branches encrease', max_digits=12)),
                ('price_increase_by_branch_fixed', models.DecimalField(decimal_places=2, default=0.0, help_text='The fixed rate that the subscription plan                                                          price is increased as the number of branches encrease', max_digits=12)),
                ('base_currency', models.ForeignKey(help_text='The default currency for this plan.', on_delete=django.db.models.deletion.CASCADE, related_name='service_subscription_plans', related_query_name='service_subscription_plan', to='system.currency')),
                ('listing_parameter', models.ForeignKey(help_text='The discounts are linked to listing parameters so that                                             the system can identify which discount to give to which agent', on_delete=django.db.models.deletion.CASCADE, related_name='service_subscription_plans', related_query_name='service_subscription_plan', to='system.listingparameter')),
                ('system', models.ForeignKey(help_text='The system module that this subscription plan applies to', on_delete=django.db.models.deletion.CASCADE, related_name='service_subscription_plans', related_query_name='service_subscription_plan', to='system.system', verbose_name='System Module')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferralRewardPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='system asset name')),
                ('reward_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('reward_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('number_of_referrals_needed', models.PositiveIntegerField(blank=True, default=1)),
                ('reward_active_time_in_days', models.PositiveIntegerField(help_text='is the number of days that the reward stays active once awarded')),
                ('system', models.ForeignKey(help_text='The system module that this referral reward plan applies to', on_delete=django.db.models.deletion.CASCADE, related_name='referral_reward_plans', related_query_name='referral_reward_plan', to='system.system', verbose_name='System Module')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethodDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('discount_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('payment_method', models.ForeignKey(help_text='The payment method that the discount applies to', on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', related_query_name='payment_method', to='system.paymentmethod', verbose_name='payment method')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='system',
            field=models.ForeignKey(help_text='The system module that the payment method applies to', on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', related_query_name='payment_method', to='system.system', verbose_name='System Module'),
        ),
        migrations.CreateModel(
            name='NotificationTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, verbose_name='topic name')),
                ('system', models.ForeignKey(help_text='The system module that this feedback is given to', on_delete=django.db.models.deletion.CASCADE, related_name='notification_topics', related_query_name='notification_topic', to='system.system', verbose_name='System Module')),
                ('target_group', models.ForeignKey(help_text='The target user group that this notifications to be sent                                         to with is topic', on_delete=django.db.models.deletion.CASCADE, related_name='notification_topics', related_query_name='notification_topic', to='auth.group')),
            ],
        ),
        migrations.AddField(
            model_name='listingparameter',
            name='system',
            field=models.ForeignKey(help_text='The system module that this parameter apply to', on_delete=django.db.models.deletion.CASCADE, related_name='listing_parameters', related_query_name='listing_parameter', to='system.system', verbose_name='system module'),
        ),
        migrations.CreateModel(
            name='FeaturingPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('price', models.DecimalField(decimal_places=5, default=0.0, max_digits=12)),
                ('base_currency', models.ForeignKey(help_text='The default currency for this featuring price.', on_delete=django.db.models.deletion.CASCADE, related_name='featuring_prices', related_query_name='featuring_price', to='system.currency')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='iscount name')),
                ('action', models.CharField(choices=[('Count', 'COUNT'), ('Single', 'SINGLE'), ('Deadline', 'DEADLINE')], help_text='determines how the system calculated length of discount period                                 or amount. It can have count, single, or deadline', max_length=50, verbose_name='Discount Action Type')),
                ('unit', models.CharField(choices=[('Days', 'DAYS'), ('Listings', 'LISTINGS'), ('Subscription', 'SUBSCRIPTION')], help_text='It can be days, listings or subscription', max_length=50, verbose_name='discount value unit')),
                ('value', models.IntegerField(default=1)),
                ('discount_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_type', models.CharField(choices=[('Pay-per-listing', 'PAY_PER_LISTING'), ('Subscription', 'SUBSCRIPTION')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_trackable', models.BooleanField(default=False)),
                ('listing_parameter', models.ForeignKey(help_text='The discounts are linked to listing parameters so that                                             the system can identify which discount to give to which agent', on_delete=django.db.models.deletion.CASCADE, related_name='discounts', related_query_name='discount', to='system.listingparameter')),
            ],
        ),
        migrations.AddField(
            model_name='currency',
            name='system',
            field=models.ForeignKey(help_text='The system module that the currency applies to', on_delete=django.db.models.deletion.CASCADE, related_name='currencies', related_query_name='currency', to='system.system', verbose_name='System Module'),
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='coupon code')),
                ('discount_percentage_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_fixed_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_use', models.PositiveIntegerField(default=1, help_text='How many times can be redeemed', verbose_name='total uses')),
                ('use_count', models.PositiveIntegerField(default=1, help_text='How many times redeemed so far', verbose_name='use counts')),
                ('redeemed_on', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='redemption date')),
                ('system', models.ForeignKey(help_text='The system module that this coupon applies to', on_delete=django.db.models.deletion.CASCADE, related_name='coupons', related_query_name='coupon', to='system.system', verbose_name='System Module')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='systemparameter',
            constraint=models.UniqueConstraint(fields=('system', 'name'), name='system_parameter_unique_together_constraint'),
        ),
        migrations.AddConstraint(
            model_name='notificationtopic',
            constraint=models.UniqueConstraint(fields=('system', 'name'), name='notification_topic_unique_together_constraint'),
        ),
        migrations.AddConstraint(
            model_name='listingparameter',
            constraint=models.UniqueConstraint(fields=('system', 'name'), name='listing_parameter_unique_together_constraint'),
        ),
        migrations.AddConstraint(
            model_name='discount',
            constraint=models.CheckConstraint(check=models.Q(('action__exact', 'COUNT'), models.Q(('unit__exact', 'DAYS'), ('unit__exact', 'LISTINGS'), _connector='OR')), name='discount_constraint'),
        ),
    ]
